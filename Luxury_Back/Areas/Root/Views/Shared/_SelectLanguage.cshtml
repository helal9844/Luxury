@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options;

@{
	var requestCulture = Context.Features.Get<IRequestCultureFeature>();
	var cultures = options.Value.SupportedUICultures
					.Select(s => new SelectListItem { Value = s.Name, Text = s.NativeName }).ToList();

	var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

 }@using Microsoft.AspNetCore.Mvc.Localization;

<div class="select-lang nav-link-label">
    <a class="nav-link"
       href="#"
       data-toggle="dropdown">
        <img class="rounded-circle" src="~/images/panel/@(CultureInfo.CurrentCulture.Name).png" />
    </a>
    <ul class="dropdown-menu dropdown-menu-media dropdown-menu-right">
        @foreach (var item in cultures)
		{
            @if (item.Value != CultureInfo.CurrentCulture.Name)
            {
                <li>
                    <div class="dropdown-item lang-item" data-lang="@item.Value">
                        <img class="rounded-circle" src="~/images/panel/@(item.Value).png" />
                        <span class="mx-50">@localizer[@item.Value]</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<form class="my-auto lang-form d-none" asp-action="SelectLanguage" asp-controller="Home" asp-route-returnUrl="@returnUrl" method="post">
    <select class="select_lang selectBox" name="culture" asp-for="@requestCulture.RequestCulture.UICulture.Name"
        onchange="this.form.submit();">
        @foreach (var item in cultures)
        {
            <option value="@item.Value">
                @(localizer[item.Value])
            </option>
        }
    </select>
</form>